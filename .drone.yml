kind: pipeline
type: docker
name: Localstack Terratest Test

trigger:
  branch:
  - main

services:
- name: localstack
  image: localstack/localstack:0.14.3

steps:
- name: localstack wait
  image: curlimages/curl:7.83.1
  commands:
  # Checks to see that localstack service is up and running
  - until curl -s http://localstack:4566/health; do echo -n . && sleep 1; done

- name: run tests
  image: hashicorp/terraform:1.2.2
  commands:
  - apk add go
  # copy AWS provider localstack overrides into place
  - cp tests/aws-provider-localstack.tf .
  - cd tests
  - go test -v -run TestTerraformAwsNetworkExample

---  
kind: pipeline
type: docker
name: Localstack Terraform CLI Test

trigger:
  branch:
  - main

services:
- name: localstack
  image: localstack/localstack:0.14.3

steps:

- name: localstack wait
  image: curlimages/curl:7.83.1
  commands:
  # Checks to see that localstack service is healthy
  - until curl -s http://localstack:4566/health; do echo -n . && sleep 1; done

- name: run tests
  image: hashicorp/terraform:1.2.2
  commands:
  # copy AWS provider localstack overrides into place
  - cp tests/aws-provider-localstack.tf tests/example/test-provider.tf
  - terraform test

# disabling AWS tests for the talk
# 
#---
#kind: pipeline
#type: docker
#name: AWS Terratest Test
#
#trigger:
#  when:
#    status:
#    - failure
#    - success
#  branch:
#  - main
#
#steps:
#
#- name: run tests
#  image: hashicorp/terraform:1.2.2
#  environment:
#    AWS_ACCESS_KEY_ID: ASIARLPW64RANAXCCYHT
#    AWS_SESSION_TOKEN:
#      from_secret: aws_session_token
#    AWS_SECRET_ACCESS_KEY:
#      from_secret: aws_secret_access_key
#  commands:
#  - apk add go
#  # copy AWS provider config into place
#  - cp tests/aws-provider.tf test-provider.tf
#  - cd tests
#  - go test -v -run TestTerraformAwsNetworkExample
#
#---
#kind: pipeline
#type: docker
#name: AWS Terraform CLI Test
#
#depends_on:
#- "AWS Terratest Test"
#
#trigger:
#  when:
#    status:
#    - failure
#    - success
#  branch:
#  - main
#
#steps:
#
#- name: run tests
#  image: hashicorp/terraform:1.2.2
#  environment:
#    AWS_ACCESS_KEY_ID: ASIARLPW64RANAXCCYHT
#    AWS_SESSION_TOKEN:
#      from_secret: aws_session_token
#    AWS_SECRET_ACCESS_KEY:
#      from_secret: aws_secret_access_key
#  commands:
#  # copy AWS provider config into place
#  - cp tests/aws-provider.tf tests/example/test-provider.tf
#  - terraform test
