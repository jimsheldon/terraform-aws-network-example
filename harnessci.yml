pipeline:
  name: AWS Network Example
  identifier: AWS_Network_Example
  projectIdentifier: Default_Project_1667833421639
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1667833468644
        repoName: jimsheldon/terraform-aws-network-example
        build: <+input>
  stages:
    - stage:
        name: test module
        identifier: test_module
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          serviceDependencies:
            - identifier: localstack
              name: localstack
              type: Service
              spec:
                connectorRef: docker_hub
                image: localstack/localstack:1.2.0
          execution:
            steps:
              - step:
                  type: Run
                  name: wait
                  identifier: wait
                  spec:
                    connectorRef: docker_hub
                    image: curlimages/curl:7.83.1
                    shell: Sh
                    command: until curl --fail --silent --max-time 1 http://localstack:4566/health; do sleep 2; done
              - step:
                  type: Run
                  name: terratest
                  identifier: terratest
                  spec:
                    connectorRef: docker_hub
                    image: hashicorp/terraform:1.2.2
                    shell: Sh
                    command: |
                      apk add go
                      cp tests/aws-provider-localstack.tf test-provider.tf
                      cd tests
                      go test -v -run TestTerraformAwsNetworkExample | tee test_output.log
                  failureStrategies: []
              - step:
                  type: Run
                  name: terratest log parser
                  identifier: terratest_log_parser
                  spec:
                    connectorRef: docker_hub
                    image: golang:1.18
                    shell: Sh
                    command: |-
                      cd tests
                      go install github.com/gruntwork-io/terratest/cmd/terratest_log_parser@latest
                      PATH=$HOME/go/bin:$PATH terratest_log_parser -testlog test_output.log -outputdir test_output
                      cat test_output/report.xml
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - tests/test_output/report.xml
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
